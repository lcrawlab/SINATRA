% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Reconstruction_Functions.R
\name{create_hull}
\alias{create_hull}
\title{The plotting functions: (create a convex hull of the vertices closest to the critical points)}
\usage{
create_hull(points, vertices, n, color = "blue", alpha = 0.3,
  plot_points = FALSE)
}
\arguments{
\item{points}{A (nx3 matrix). Each entry are the critical points in matrix form. These points are what we create the convex hull around.}

\item{vertices}{A (mx3 matrix). The vertices of the simplicial complex for which the function creates a convex hull around.}

\item{n}{(integer) A parameter to choose, how big the convex hull is (how many of the n closest vertices).}

\item{color}{(string) Color of the convex hull.}

\item{alpha}{(float (0-1)): The intensity of the color of the convex hull}

\item{plot_points}{(TRUE/FALSE): A boolean to see if the user wants to plot the critical points themselves, in addition to the hull.}
}
\value{
Plots the convex hull of the critical points in the RGL interface.
}
\description{
\code{create_hull} Plot the Convex Hull of the points given some vertices of the convex hull.
}
\details{
The code transverses through the matrix of critical points, finds the 'n' closest vertices (n is a parameter) for each critical point.
For each point, the code grabs the coordinates of the 'n' closest vertices, and perturbs them slightly.
The perturbation is done becase the rgl plotting procedure doesn't allow for overlapping shapes on the exact same coordinates.
The perturbed coordinates of the vertices are then created into a convex hull, and then plotted.
If necessary, the critical points can be plotted too.
}
