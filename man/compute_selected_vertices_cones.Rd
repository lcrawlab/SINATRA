% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shape_reconstruction.R
\name{compute_selected_vertices_cones}
\alias{compute_selected_vertices_cones}
\title{Reconstruct Vertices}
\usage{
compute_selected_vertices_cones(
  dir,
  complex,
  rate_vals,
  len,
  threshold = -1,
  cone_size,
  ball = TRUE,
  ball_radius,
  radius = 1
)
}
\arguments{
\item{dir}{(nx3 matrix) The matrix of directions that were used compute the (S/D) EC curve over.}

\item{complex}{(list) : The list containing metadata of the Vertices, Edges, and Faces of the mesh (use process_off_file_v3 to obtain).}

\item{rate_vals}{(vector) : Vector of variable importances for each sub-level set across each direction}

\item{len}{(int) : The number of sub-level sets to compute the (S/D) EC curve on in each direction.}

\item{threshold}{(float) : The threshold for determining which sub-level sets are used for the reconstruction.}

\item{cone_size}{(int) : The number of directions in each cone.}

\item{ball}{(boolean) : Determining whether or not to compute the (S/D) EC curve on a ball for uniform comparisons.}

\item{ball_radius}{(float) : The radius of the ball to compute the (S/D) EC on; if you want the curve to be computed relative to the shape, don't touch this parameter.}

\item{radius}{(int) : The number of sub-level sets "before" and "after" the selected sub-level sets we want to include.
Setting Radius = 1 is recommened.}

\item{ec_type}{(string) : What type of EC curve to compute. Currently we support ECT (Euler Characteristic Curve), SECT (Smooth Euler Characteristic Curve)}
}
\value{
total_selected_vertices (vector) : Vector of the vertex indices that are reconstructed.
}
\description{
Given a set of variable importances, threshold, the function reconstructs the vertices above the threshold
by intersecting the sub-level sets of the directions in a cone with variable importance greater than the threshold.
This function loops over each cone, and computes the reconstructed vertices using intersections of sub-level sets. The vertices
from each cone are then unioned in the end for the final set of reconstructed vertices.
}
