yy[1]$value
yy[1]$values
yy[1]$sim1
xy <- expand.grid(1:10, 1:10)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=3, model=vgm(psill=0.025,model="Exp",range=20), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=4)
gridded(yy) = ~x+y
spplot(yy[1])
spplot(yy)
library(gstat)
xy <- expand.grid(1:10, 1:10)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=20), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=4)
gridded(yy) = ~x+y
spplot(yy[1])
spplot(yy)
yy[1]$sim1
xy <- expand.grid(1:5, 1:5)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=20), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=4)
gridded(yy) = ~x+y
spplot(yy[1])
spplot(yy)
spplot(yy[1])
spplot(yy[1])
spplot(yy[2])
spplot(yy[3])
spplot(yy[4])
spplot(yy[3])
spplot(yy)
spplot(yy[5])
xy <- expand.grid(1:5, 1:5)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=20), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=1)
gridded(yy) = ~x+y
spplot(yy[1])
spplot(yy)
spplot(yy[1])
spplot(yy)
yy <- predict(g.dummy, newdata=xy, nsim=2)
gridded(yy) = ~x+y
spplot(yy[1])
spplot(yy)
spplot(yy[1])
spplot(yy)
yy <- predict(g.dummy, newdata=xy, nsim=3)
gridded(yy) = ~x+y
spplot(yy[1])
spplot(yy)
spplot(yy[1])
spplot(yy)
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=20), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=4)
gridded(yy) = ~x+y
spplot(yy[1])
spplot(yy)
xy <- expand.grid(1:100, 1:100)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=20), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=4)
gridded(yy) = ~x+y
spplot(yy)
xy <- expand.grid(1:5, 1:5)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=2), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=4)
gridded(yy) = ~x+y
spplot(yy[1])
spplot(yy)
yy[1]$sim1
yy[3]$sim1
yy[3]
yy
library(gstat)
xy <- expand.grid(1:100, 1:100)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=2), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=4)
gridded(yy) = ~x+y
spplot(yy[1])
spplot(yy)
y
yy
yy[1]
yy$sim1
library(gstat)
xy <- expand.grid(1:5, 1:5)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=2), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=4)
gridded(yy) = ~x+y
spplot(yy[1])
spplot(yy)
yy$sim1
yy$sim4
spplot(yy[4])
yy$sim4
spplot(yy[1])
yy[1]
yy$sim1
attributes(yy[1])
yy$sim2
yy$sim1
yy$sim2
attributes(yy)
library(gstat)
xy <- expand.grid(1:100, 1:100)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=2), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=4)
gridded(yy) = ~x+y
spplot(yy[1])
spplot(yy)
attributes(yy)
yy$sim1
spplot(yy$sim1)
spplot(yy[1])
library(TDA)
heatmap1 <- matrix(yy$sim1, nrow = 100, byrow = TRUE)
heatmap1
heatmap(heatmap1)
yy$sim1
spplot(yy$sim1)
spplot(yy[1])
x <- c(1,2,3,4,5,6,7,8,9)
x
x <- matrix(x, nrow = 3, byrow = TRUE)
x
heatmap(heatmap1)
image(heatmap1)
xy <- expand.grid(1:100, 1:100)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=20), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=4)
gridded(yy) = ~x+y
spplot(yy[1])
spplot(yy)
heatmap1 <- matrix(yy$sim1, nrow = 100, byrow = TRUE)
image(heatmap1)
spplot(yy[1])
image(heatmap1)
image(heatmap1)
spplot(yy[1])
image(t(heatmap1))
rf.Diag <- gridDiag(X = heatmap1, FUN = kde, h = 0.1,
lim = cbind(Xlim, Ylim),by = 0.1,
sublevel = TRUE, library = "Dionysus",
printProgress = TRUE)
rf.Diag <- gridDiag(X = heatmap1, FUN = kde, h = 0.1,
lim = cbind(100, 100),by = 1,
sublevel = TRUE, library = "Dionysus",
printProgress = TRUE)
rf.Diag <- gridDiag(X = heatmap1, FUN = kde, h = 0.1,
lim = cbind(c(0,100), c(0,100)),by = 1,
sublevel = TRUE, library = "Dionysus",
printProgress = TRUE)
plot(heatmap1, cex = 0.1,main = 'Crater Dataset',xlab = "x", ylab = "y")
k <- 100
rf.knn <- knnDE(X = heatmap1, Grid = Grid, k = k)
persp(Xseq, Yseq,
matrix(rf.knn,ncol = length(Yseq), nrow = length(Xseq)),
xlab = "",ylab = "", zlab = "",
theta = -30, phi = 60, ltheta = 80,col = 5,
main = "KDE", d = 0.5)
source('~/Dropbox/sublevelFiltration.R')
Xlim <- c(0,100)
Ylim <- c(0,100)
Xseq <- seq(Xlim[1], Xlim[2], by = 1)
Yseq <- seq(Ylim[1], Ylim[2], by = 1)
Grid <- expand.grid(Xseq, Yseq)
k <- 100
rf.knn <- knnDE(X = heatmap1, Grid = Grid, k = k)
heatmap1
size(heatmap1)
dim(heatmap1)
crater = read.table("/Users/sianamuljadi/Dropbox/crater.xy.txt")
View(crater)
rf.Diag <- gridDiag(FUNvalues = heatmap1,
lim = cbind(c(0,100), c(0,100)),by = 1,
sublevel = TRUE, library = "Dionysus",
printProgress = TRUE)
plot(rf.Diag[["diagram"]], dimension = 1)
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=50), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=1)
gridded(yy) = ~x+y
spplot(yy[1])
heatmap1 <- matrix(yy$sim1, nrow = 100, byrow = TRUE)
image(t(heatmap1))
rf.Diag <- gridDiag(FUNvalues = heatmap1,
lim = cbind(c(0,100), c(0,100)),by = 1,
sublevel = TRUE, library = "Dionysus",
printProgress = TRUE)
plot(rf.Diag[["diagram"]], dimension = 1)
xy <- expand.grid(1:100, 1:100)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=10), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=1)
gridded(yy) = ~x+y
spplot(yy[1])
heatmap1 <- matrix(yy$sim1, nrow = 100, byrow = TRUE)
image(t(heatmap1))
rf.Diag <- gridDiag(FUNvalues = heatmap1,
lim = cbind(c(0,100), c(0,100)),by = 1,
sublevel = TRUE, library = "Dionysus",
printProgress = TRUE)
plot(rf.Diag[["diagram"]], dimension = 1)
plot(rf.Diag[["diagram"]], dimension = 0)
rf.Diag <- gridDiag(FUNvalues = heatmap1,
lim = cbind(c(0,100), c(0,100)),by = 1,
sublevel = FALSE, library = "Dionysus",
printProgress = TRUE)
plot(rf.Diag[["diagram"]], dimension = 0)
plot(rf.Diag[["diagram"]], dimension = 1)
xy <- expand.grid(1:100, 1:100)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=1), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=1)
gridded(yy) = ~x+y
spplot(yy[1])
heatmap1 <- matrix(yy$sim1, nrow = 100, byrow = TRUE)
image(t(heatmap1))
rf.Diag <- gridDiag(FUNvalues = heatmap1,
lim = cbind(c(0,100), c(0,100)),by = 1,
sublevel = FALSE, library = "Dionysus",
printProgress = TRUE)
plot(rf.Diag[["diagram"]], dimension = 1)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=75), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=1)
gridded(yy) = ~x+y
spplot(yy[1])
heatmap1 <- matrix(yy$sim1, nrow = 100, byrow = TRUE)
image(t(heatmap1))
rf.Diag <- gridDiag(FUNvalues = heatmap1,
lim = cbind(c(0,100), c(0,100)),by = 1,
sublevel = FALSE, library = "Dionysus",
printProgress = TRUE)
plot(rf.Diag[["diagram"]], dimension = 1)
xy <- expand.grid(1:100, 1:100)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=95), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=1)
gridded(yy) = ~x+y
spplot(yy[1])
heatmap1 <- matrix(yy$sim1, nrow = 100, byrow = TRUE)
image(t(heatmap1))
rf.Diag <- gridDiag(FUNvalues = heatmap1,
lim = cbind(c(0,100), c(0,100)),by = 1,
sublevel = FALSE, library = "Dionysus",
printProgress = TRUE)
plot(rf.Diag[["diagram"]], dimension = 1)
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=40), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=1)
gridded(yy) = ~x+y
spplot(yy[1])
heatmap1 <- matrix(yy$sim1, nrow = 100, byrow = TRUE)
image(t(heatmap1))
rf.Diag <- gridDiag(FUNvalues = heatmap1,
lim = cbind(c(0,100), c(0,100)),by = 1,
sublevel = FALSE, library = "Dionysus",
printProgress = TRUE)
plot(rf.Diag[["diagram"]], dimension = 1)
plot(rf.Diag[["diagram"]], dimension = 0)
xy <- expand.grid(1:100, 1:100)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=1,model="Exp",range=40), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=1)
gridded(yy) = ~x+y
spplot(yy[1])
heatmap1 <- matrix(yy$sim1, nrow = 100, byrow = TRUE)
image(t(heatmap1))
rf.Diag <- gridDiag(FUNvalues = heatmap1,
lim = cbind(c(0,100), c(0,100)),by = 1,
sublevel = FALSE, library = "Dionysus",
printProgress = TRUE)
plot(rf.Diag[["diagram"]], dimension = 0)
xy <- expand.grid(1:100, 1:100)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=40), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=1)
gridded(yy) = ~x+y
spplot(yy[1])
rf.Diag <- gridDiag(FUNvalues = heatmap1,
lim = cbind(c(0,100), c(0,100)),by = 1,
sublevel = FALSE, library = "Dionysus",
printProgress = TRUE)
plot(rf.Diag[["diagram"]], dimension = 0)
plot(rf.Diag[["diagram"]], dimension = 1)
xy <- expand.grid(1:100, 1:100)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=40), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=1)
library(gstat)
library(TDA)
xy <- expand.grid(1:100, 1:100)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=40), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=1)
gridded(yy) = ~x+y
spplot(yy[1])
heatmap1 <- matrix(yy$sim1, nrow = 100, byrow = TRUE)
image(t(heatmap1))
rf.Diag <- gridDiag(FUNvalues = heatmap1,
lim = cbind(c(0,100), c(0,100)),by = 1,
sublevel = FALSE, library = "Dionysus",
printProgress = TRUE)
plot(rf.Diag[["diagram"]], dimension = 1)
plot(rf.Diag[["diagram"]], dimension = 0)
source('~/Dropbox/sublevelFiltration.R')
source('~/Dropbox/sublevelFiltration.R')
SimpleRandomFieldPD(50,10,0)
SimpleRandomFieldPD(50,10,1)
typeof(100)
typeof(100.1)
typeof(1001)
class(100)
SimpleRandomFieldPD(100,10,1)
SimpleRandomFieldPD(20,10,1)
SimpleRandomFieldPD(40,10,1)
rf.Diag <- gridDiag(FUNvalues = heatmap1,
lim = cbind(c(0,100), c(0,100)),by = 1,
sublevel = FALSE, library = "Dionysus",
printProgress = TRUE)
source('~/Dropbox/Data + Experiments/SimulateGRF/GeneratePersistenceDiagrams.R')
plot(rf.Diag[["diagram"]], dimension = 1)
heatmap1
image(heatmap1)
persp(c(0,100), c(0,100),
matrix(heatmap1,ncol = length(Yseq), nrow = length(Xseq)),
xlab = "",ylab = "", zlab = "",
theta = -20, phi = 35, ltheta = 50,col = 2,
main = "KDE", d = 0.5)
persp(c(0,99), c(0,99),
matrix(heatmap1,ncol = length(Yseq), nrow = length(Xseq)),
xlab = "",ylab = "", zlab = "",
theta = -20, phi = 35, ltheta = 50,col = 2,
main = "KDE", d = 0.5)
persp(c(0,100), c(0,100),
matrix(heatmap1,ncol = length(c(0,100)), nrow = length(c(0,100)) ),
xlab = "",ylab = "", zlab = "",
theta = -20, phi = 35, ltheta = 50,col = 2,
main = "KDE", d = 0.5)
heatmap1 <- matrix(yy$sim1, nrow = 100, byrow = TRUE)
persp(c(0,100), c(0,100),
matrix(heatmap1,ncol = length(c(0,100)), nrow = length(c(0,100))),
xlab = "",ylab = "", zlab = "",
theta = -20, phi = 35, ltheta = 50,col = 2,
main = "KDE", d = 0.5)
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=40), nmax=20)
persp(c(0,100), c(0,100),
matrix(heatmap1,ncol = length(c(0,100)), nrow = length(c(0,100))),
xlab = "",ylab = "", zlab = "",
theta = -10, phi = 35, ltheta = 50,col = 2,
main = "KDE", d = 0.5)
dim(heatmap1)
dim(Xseq)
len(Xseq)
size(Xseq)
length(Xseq)
Xseq = c(0,99)
Yseq = c(0,99)
persp(Xseq, Yseq,
matrix(heatmap1,ncol = length(Xseq), nrow = length(Yseq) ),
xlab = "",ylab = "", zlab = "",
theta = -10, phi = 35, ltheta = 50,col = 2,
main = "KDE", d = 0.5)
persp(Xseq, Yseq,
matrix(heatmap1,ncol = length(Xseq), nrow = length(Yseq) ),
xlab = "",ylab = "", zlab = "",
theta = -10, phi = 35, ltheta = 50,col = 2,
main = "KE", d = 0.5)
heatmap1
Xseq = c(0,50)
Yseq = c(0,50)
persp(Xseq, Yseq,
matrix(heatmap1,ncol = length(Xseq), nrow = length(Yseq) ),
xlab = "",ylab = "", zlab = "",
theta = -10, phi = 35, ltheta = 50,col = 2,
main = "KDE", d = 0.5)
Xseq = c(0,50)
Yseq = c(0,50)
persp(Xseq, Yseq,
heatmap1,
xlab = "",ylab = "", zlab = "",
theta = -10, phi = 35, ltheta = 50,col = 2,
main = "KDE", d = 0.5)
Xseq = c(0,99)
Yseq = c(0,99)
persp(Xseq, Yseq,
heatmap1,
xlab = "",ylab = "", zlab = "",
theta = -10, phi = 35, ltheta = 50,col = 2,
main = "KDE", d = 0.5)
dim(heatmap1)
heatmap1 <- matrix(yy$sim1, nrow = 100, byrow = TRUE)
rf.Diag <- gridDiag(FUNvalues = heatmap1,
lim = cbind(c(0,100), c(0,100)),by = 1,
sublevel = FALSE, library = "Dionysus",
printProgress = TRUE)
plot(rf.Diag[["diagram"]], dimension = 1)
Xseq = c(0,99)
Yseq = c(0,99)
persp(Xseq, Yseq,
heatmap1,
xlab = "",ylab = "", zlab = "",
theta = -10, phi = 35, ltheta = 50,col = 2,
main = "KDE", d = 0.5)
persp(heatmap1,
xlab = "",ylab = "", zlab = "",
theta = -10, phi = 35, ltheta = 50,col = 2,
main = "KDE", d = 0.5)
xy <- expand.grid(1:100, 1:100)
names(xy) <- c("x","y")
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025,model="Exp",range=70), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim=1)
gridded(yy) = ~x+y
spplot(yy[1])
heatmap1 <- matrix(yy$sim1, nrow = 100, byrow = TRUE)
rf.Diag <- gridDiag(FUNvalues = heatmap1,
lim = cbind(c(0,100), c(0,100)),by = 1,
sublevel = FALSE, library = "Dionysus",
printProgress = TRUE)
plot(rf.Diag[["diagram"]], dimension = 1)
plot(rf.Diag[["diagram"]], dimension = 0)
Xseq = c(0,99)
Yseq = c(0,99)
persp(heatmap1,
xlab = "",ylab = "", zlab = "",
theta = -10, phi = 35, ltheta = 50,col = 2,
main = "KDE", d = 0.1)
persp(heatmap1,
xlab = "",ylab = "", zlab = "",
theta = -10, phi = 35, ltheta = 50,col = 2,
main = "KDE", d = 1)
persp(heatmap1,
xlab = "",ylab = "", zlab = "",
theta = -50, phi = 35, ltheta = 50,col = 2,
main = "KDE", d = 1)
persp(heatmap1,
xlab = "",ylab = "", zlab = "",
theta = -50, phi = 50, ltheta = 50,col = 2,
main = "KDE", d = 1)
install.packages("rgl")
persp(heatmap1,
xlab = "",ylab = "", zlab = "",
theta = -50, phi = 50, ltheta = 40,col = 2,
main = "KDE", d = 1)
image(t(heatmap1))
grf_mesh_posterior1 = visualize_random_field('GP_1',1)
source('R/Feature_Selection_Functions.R.R')
setwd("~/projects/SINATRA/R/Tests and Simple Examples/GaussiansOnPlaneExample")
source('R/Feature_Selection_Functions.R.R')
setwd('../')
source('R/Feature_Selection_Functions.R.R')
source('R/Feature_Selection_Functions.R')
setwd('../')
source('R/Feature_Selection_Functions.R')
setwd('../')
source('R/Feature_Selection_Functions.R')
source('R/SECT_Functions.R')
source('R/Tests and Simple Examples/GaussiansOnPlaneExample/Generate_fields.R')
sourceCpp("R/BAKRGibbs.cpp")
source('R/RATE.R')
# specify the critical points for the flat plane with gaussians example.
points_1 = matrix(c(0.25,0.25,random_field_class_one(c(0.25,0.25)),
0.75,0.75,random_field_class_one(c(0.75,0.75)),
0.5,0.5,random_field_class_one(c(0.5,0.5)),
0.2,0.9,random_field_class_one(c(0.2,0.9))),nrow = 4, byrow = TRUE)
points_2 = matrix(c(0.25,0.25,random_field_class_two(c(0.25,0.25)),
0.75,0.75,random_field_class_two(c(0.75,0.75)),
0.5,0.5,random_field_class_two(c(0.5,0.5)),
0.8,0.1,random_field_class_two(c(0.8,0.1))),nrow = 4, byrow = TRUE)
#generate the desired directions
#directions = generate_equidistributed_points_hemisphere(25)
directions = matrix(c(0,0,1,
1/sqrt(3),1/sqrt(3),1/sqrt(3),
-1/sqrt(3),1/sqrt(3),1/sqrt(3),
1/sqrt(3),-1/sqrt(3),1/sqrt(3),
-1/sqrt(3),-1/sqrt(3),1/sqrt(3)),
ncol = 3, byrow = TRUE)
directions <- rbind(directions,-directions)
grid_length = 40
num_sim = 50
source('~/projects/SINATRA/R/Tests and Simple Examples/GaussiansOnPlaneExample/Generate_fields.R')
generate_matrix_class_one(grid_length)
class_one_matrix <- generate_matrix_class_one(grid_length)
class_one_matrix
image(class_one_matrix)
source('R/Simulation_Functions.R')
install.packages("RandomFields")
class_one_complex <- MatrixtoSimplicialComplex(class_one_matrix)
compute_ec_curve_direction(class_one_complex, c(0,0,1), 100)
class_one_complex$Vertices
View(compute_discrete_ec_curve)
vertex_function <- class_one_complex$Vertices %*% c(0,0,0,1)
grf_mesh_posterior1 = visualize_random_field('GP_1',1)
# Look at Ec curves
vertex_function <- class_one_complex%*%c(0,0,0,1)
# Look at Ec curves
vertex_function <- class_one_complex$Vertices%*%c(0,0,0,1)
compute_discrete_ec_curve(class_one_complex,vertex_function,100,first_column_index = TRUE)
directions <- rbind(directions,-directions)
grid_length = 40
num_sim = 50
grf_mesh_posterior1 = visualize_random_field('GP_1',1)
source('~/projects/SINATRA/R/Simulation_Functions.R')
library(Rvcg)
grf_mesh_posterior1 = visualize_random_field('GP_1',1)
